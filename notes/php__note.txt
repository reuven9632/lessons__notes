        //////////////////////////////////////////////////////////////////////////
        //КОМЕНТАРИИ
//   первый способ коментария от C      одна строчка кода
/*   второй способ коментария от C++    много строк кода*/
#    третий способ коментария от Unix   одна строчка кода

        //////////////////////////////////////////////////////////////////////////
        //вывод данных с помощью echo
echo "textMessage <br/>"; //выводит данные на экран или куда либо, <br/> - переносит на новую строку
echo "вывод переменной - $nameOfvariable"; //таким образом можно 
echo $string_1;          //выведет содержимое переменной $string_1
echo $string_1.$string_2;          //выведет содержимое переменной $string_1 + содержимое переменной. при ее выводе будет такой результат : содержимое первой строкисодержимое второй строки
                                   //   (.) обьеденяет строки как в JavaScript (+)
                                   //пример
                                   echo "hi "."Donna";              //   --->    hi Donna  
                                   echo $string_1." hi ".$string_2;   //   --->    содержимое первой строки hi содержимое второй строки   
echo "\"string "."string\"";        // бэкслэш \ отменяет восприятие последующего за ним символа (нужно для вывода ' " \
echo '"'."string "."string".'"';
                              


        //////////////////////////////////////////////////////////////////////////
        //ПЕРЕМЕННЫЕ
//переменные в php могут принимать разное значение: набор инструкций, NULL, int, float, boolean ...при этом даю только имя не объявляя его спецификации
//при дальнейшем использовании переменной в дальнейшем перед ней также ставиться знак доллара $ как и при ее обьявлении
//переменные нельзя:    начинать имя с цифры                                $1name 
                        писать два слова через пробел                       $name name2
                        можно НО НЕЖЕЛАТЕЛЬНО начинать с подчеркивания      $_name

//правильно при обьявлении переменной :    как писать два и более слова     $nameNameName  or $name_name_name
                                            обычная с маленькой буквы       $name
                                            константа в верхнем регистре    $NAME                               
$nameOfvariable_1 = 1;
$nameOfvariable_2 = 1.5;
$nameOfvariable_3 = "some string";
$nameOfvariable_4 = true; //echo $nameOfvariable_4; выведет на экран 1 так как в php true это 1
$nameOfvariable_5 = true; //echo $nameOfvariable_5; выведет на экран пустую строку так как в php false это ничего или пустая строка
        
        //////////////////////////////////////////////////////////////////////////
        //КОНСТАНТЫ
        //константы в php записываються в верхнем регистре
        // обьявление константы :
define("NAME", 4.55);   //define - функция для обьявления констант, ("ИМЯ_КОНСТАНТЫ_В_ВЕРХНЕМ_РЕГИСТРЕ", "значение константы");
defined("NAME");   //define - функция для поиска констант по имени, ("ИМЯ_КОНСТАНТЫ_В_ВЕРХНЕМ_РЕГИСТРЕ"); если константа существует вернет true(1), если не существует false("")
echo PHP_VERSION;       //PHP_VERSION являеться константой php и при ее выводе будет такой результат : 5.4.40

        
        //////////////////////////////////////////////////////////////////////////
        //МАТЕМАТИЧЕСКИЕ И ЛОГИЧЕСКИЕ ФУНКЦИИ
            //МАТЕМАТИЧЕСКИЕ ФУНКЦИИ
    +, ++ (увеличить на 1), -, -- (уменьшить на 1), *, /, % (остаток от деления)
$x = 22;
$y = 11;
    $summ = $x + $y;
    $summ += $x;     //тоже самое что и $summ = $summ + $x;
    $summ++;         //увеличить на 1
$diff = $x - $y;
$diff -= $x;         //тоже самое что и $diff = $diff - $x;
$diff--;             //уменьшить на 1
    $mult = $x * $y;
    $mult *= $x;     //тоже самое что и $mult = $mult * $x;
$dil = $x / $y;
$dil /= $x;          //тоже самое что и $dil = $dil / $x;
    $ostatok = $x % $y;

            //ЛОГИЧЕСКИЕ ФУНКЦИИ
                //$bool_1 вернет true или folse
$bool_1 = $x > $y;    // >  больше
$bool_1 = $x => $y;   // => больше или равно
$bool_1 = $x < $y;    // <  меньше
$bool_1 = $x <= $y;   // <= меньше или равно
$bool_1 = $x == $y;   // == равно
$bool_1 = $x === $y;  // === ОПЕРАТОР ЭКВИВАЛЕНТНОСТИ проверет если тивы переменных не совпадают то false, если совпадают то true
$bool_1 = $x != $y;   // ! не    != не равно, !> не больше и т. д.
$bool_1 = ($x < $y) || ($x == $y);   // || или( один из вариантов true или оба true )
$bool_1 = ($x < $y) ^ !($x == $y);  // ^  исключающее или ()
$bool_1 = ($x < $y) && ($x == $y);   // && и


            //////////////////////////////////////////////////////////////////////////
            //ОПЕРАТОРЫ IF, IF ELSE   , switch\case(break) ++Bonus++
if ($x > 5 && $y < 10)
    echo "succes";


    if ($x > $y)
        echo "succes \$x > \$y";
    if else ($x < $y){
        echo "succes \$x < \$y";
        echo "if you have more then two rows of code need {}";
    }


if ($x > $y)
    echo "succes \$x > \$y";
if else ($x < $y){
    echo "succes \$x < \$y";
    echo "if you have more then two rows of code need {}";
}
else
    return "something else";


    $num = 12;
    switch ($num) {
        case "hello" : echo "это строковая переменная равнвя hello"; break;   //после case нужно ставить berak иначе с случае что условие выполнилось он продолжит выполнять следующие case даже если для них условие неверно
        case "12" : echo "это переменная равнвя 12"; break;
        case "5" : echo "это переменная равнвя 5"; break;
        case "7" : echo "это переменная равнвя 7"; break;
        default : echo "это переменная неизвестна"; break;        //default это как else, выполниться в случае что не сработал ни один case, в конце не нужно ставвить break            }
        //default необязателен
    }


//++Bonus++
$x == $y ? $string = "good" : $string = "not good";  //если $x равен $y то выполнить код $string = "good" иначе выполнить код $string = "not good"
//более длинная запись того же выражения
if ($x == $y)
    $string = "good";
else 
    $string = "not good"

            //////////////////////////////////////////////////////////////////////////
            //ОПЕРАТОРЫ ЦИКЛА FOR, WHILE, DO WHILE
for ($i = 0; $i >= 40; $i++) {
    if ($i % 5 == 0) continue;      //continue - говорит циклу не продолжать выполнение кода а перескочить на следующий уровень
                                    //таким образом результаты с остатком 0 от 5 будет пропущен в цикле
    if ($i >=28) break;             //break полностью останавливает цикл и выходит из него, тоесть в данном примере все числа больше 28 обработанны не будут
    echo "номер цикла № $i <br/>";
}


    $j = 0;                         //для while нужно обьявлять переменную заранее
    while ($j <= 10) {
        echo "номер цикла while -  ";
        $j++;                       //для while увеличивать переменную нужно внутри цикла
    }


$z = 0;
do {
    echo "z равна = $z <br/>";
    $z++;
} while ($z < 5);                         //обязательно вконце ;



            //////////////////////////////////////////////////////////////////////////
            //  ФУНКЦИИ
functon nameFunction ($data) {                  //  имя переменной котороую мы передаем в функцию и имя переменной в функции совпадать не обязаны. пример: nameFunction ($summ)
    echo "полученный параметр функции - $data"; // выводит полученные данные на экран. пример: $summ = 5; nameFunction ($summ);   то вымедет  5
}


$x = mult (4, 8);
nameFunction ($x);                              // выводит полученные данные на экран. описание функции смотри чуть чуть выше


    function mult ($q, $w) {
        $mult = $q * $w;
        return $mult;                           //return может возвращать только один элемент/переменную
    }











            




